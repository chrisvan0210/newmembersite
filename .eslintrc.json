{
	// Configuration for JavaScript files
	"extends": [
		"airbnb-base",
		"next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
		"plugin:prettier/recommended"
	],
	"rules": {
		"prettier/prettier": [
			"error",
			{
				"singleQuote": true,
				"endOfLine": "auto"
			}
		]
	},
	"overrides": [
		// Configuration for TypeScript files
		{
			"files": ["**/*.ts", "**/*.tsx"],
			"plugins": ["@typescript-eslint", "unused-imports", "simple-import-sort", "react-func"],
			"extends": ["airbnb", "airbnb-typescript", "airbnb/hooks", "next/core-web-vitals", "plugin:prettier/recommended"],
			"parserOptions": {
				"project": "./tsconfig.json"
			},
			"rules": {
				"prettier/prettier": [
					"error",
					{
						"trailingComma": "all",
						"arrowParens": "avoid",
						"semi": true,
						"endOfLine": "auto",
						"tabWidth": 2,
						"useTabs": true,
						"singleQuote": true,
						"jsxSingleQuote": false,
						"printWidth": 120
					}
				],
				"react/function-component-definition": "off", // Disable Airbnb's specific function type
				"react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
				"react/require-default-props": "off", // Allow non-defined react props as undefined
				"react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
				"react/button-has-type": "off",
				"react-hooks/exhaustive-deps": "off", // Incorrectly report needed dependency with Next.js router
				"@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
				"@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
				"@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
				"no-restricted-syntax": ["error", "ForInStatement", "LabeledStatement", "WithStatement"], // Overrides Airbnb configuration and enable no-restricted-syntax
				"import/prefer-default-export": "off", // Named export is easier to refactor automatically
				"simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
				"simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
				"@typescript-eslint/no-unused-vars": "warn",
				"unused-imports/no-unused-imports": "warn",
				"unused-imports/no-unused-vars": [
					"warn",
					{
						"vars": "all",
						"varsIgnorePattern": "^_",
						"args": "after-used",
						"argsIgnorePattern": "^_"
					}
				],
				"max-lines": [
					"error",
					{
						"max": 400,
						"skipBlankLines": true,
						"skipComments": true
					}
				],
				"react-func/max-lines-per-function": [
					"error",
					{
						"max": 150,
						"skipBlankLines": true,
						"skipComments": true,
						"IIFEs": true
					}
				],
				"jsx-a11y/click-events-have-key-events": "off",
				"jsx-a11y/no-static-element-interactions": "off",
				"jsx-a11y/anchor-is-valid": "off",
				"jsx-a11y/mouse-events-have-key-events": "off",
				"jsx-a11y/media-has-caption": "off"
			}
		}
	]
}
